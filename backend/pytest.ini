[pytest]
# Use asyncio mode for all tests
# Requires pytest-asyncio plugin
asyncio_mode = auto
# Let pytest-asyncio manage loop scope based on fixture scope
# asyncio_default_fixture_loop_scope = function

# Add environment variables needed for tests
# For example, if using a separate test database or settings file
# env =
#     TESTING=true
#     DATABASE_URL=sqlite+aiosqlite:///./data/test_app.db

# Define test paths (optional, defaults to current dir)
testpaths = tests

# Python files to consider as tests
python_files = test_*.py

# Python classes to consider as tests
python_classes = Test*

# Python functions to consider as tests
python_functions = test_*

# Add markers if needed for grouping tests
# markers =
#     slow: marks tests as slow (deselect with '-m "not slow"')
#     api: marks tests related to API endpoints